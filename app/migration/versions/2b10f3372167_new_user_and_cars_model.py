"""new user and cars model

Revision ID: 2b10f3372167
Revises: 718be31519a1
Create Date: 2025-01-19 18:01:15.672921

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2b10f3372167'
down_revision: Union[str, None] = '718be31519a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activ_cars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('owner', sa.Integer(), nullable=False),
    sa.Column('brand', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('body', sa.String(), nullable=True),
    sa.Column('fuel_type', sa.String(), nullable=True),
    sa.Column('engine_volume', sa.Double(), nullable=True),
    sa.Column('power', sa.Double(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('range', sa.Double(), nullable=True),
    sa.Column('current_owner', sa.Integer(), nullable=True),
    sa.Column('start_price', sa.Double(), nullable=True),
    sa.Column('current_price', sa.Double(), nullable=True),
    sa.Column('buy_price', sa.Double(), nullable=True),
    sa.Column('price_step', sa.Double(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('registration', sa.String(), nullable=True),
    sa.Column('images', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['current_owner'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('property_cars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('owner', sa.Integer(), nullable=False),
    sa.Column('brand', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('body', sa.String(), nullable=True),
    sa.Column('fuel_type', sa.String(), nullable=True),
    sa.Column('engine_volume', sa.Double(), nullable=True),
    sa.Column('power', sa.Double(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('range', sa.Double(), nullable=True),
    sa.Column('price', sa.Double(), nullable=True),
    sa.Column('buy_date', sa.Date(), nullable=True),
    sa.Column('registration', sa.String(), nullable=True),
    sa.Column('images', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['owner'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('cars')
    op.drop_table('property')
    op.add_column('users', sa.Column('surname', sa.String(), nullable=True))
    op.add_column('users', sa.Column('description', sa.String(), nullable=True))
    op.add_column('users', sa.Column('telephone', sa.String(), nullable=True))
    op.add_column('users', sa.Column('registered_at', sa.Date(), nullable=False))
    op.add_column('users', sa.Column('last_seance', sa.Date(), nullable=False))
    op.add_column('users', sa.Column('property_cars', sa.String(), nullable=False))
    op.add_column('users', sa.Column('property_gosnumbers', sa.String(), nullable=False))
    op.add_column('users', sa.Column('verefyed', sa.String(), nullable=False))
    op.alter_column('users', 'passport_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'property')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('property', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column('users', 'passport_number',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('users', 'verefyed')
    op.drop_column('users', 'property_gosnumbers')
    op.drop_column('users', 'property_cars')
    op.drop_column('users', 'last_seance')
    op.drop_column('users', 'registered_at')
    op.drop_column('users', 'telephone')
    op.drop_column('users', 'description')
    op.drop_column('users', 'surname')
    op.create_table('property',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('buy_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='property_pkey')
    )
    op.create_table('cars',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('brand', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('body', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('car_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('buy_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tax', sa.INTEGER(), sa.Computed('((price)::numeric * 0.05)', persisted=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_number'], ['users.passport_number'], name='cars_user_number_fkey'),
    sa.PrimaryKeyConstraint('id', name='cars_pkey')
    )
    op.drop_table('property_cars')
    op.drop_table('activ_cars')
    # ### end Alembic commands ###
